<svg xmlns="http://www.w3.org/2000/svg" height="400" width="400" id="tooltip-svg-5">
            <style>
                #tooltip {
                    dominant-baseline: hanging; 
                }
            </style>
            
            <circle cx="200" cy="200" r="190" stroke="#888888" stroke-width="3" fill="#DDDDDD"/>

        <path d="M 200,200 h 1.32292 v -52.916665 h 1.32291 l -2.64583,-5.291666 -2.64583,5.291666 h 1.32291 v 52.916665 z" fill="#337ab7" id="arrow_1" class="tooltip-trigger" data-tooltip-text="omega_1" fill-opacity="0.5" stroke-width="0" transform="translate(-400.0,-400.0) scale(3.0)  rotate(81.78868394632464,200,200)"/><path d="M 200,200 h 1.32292 v -52.916665 h 1.32291 l -2.64583,-5.291666 -2.64583,5.291666 h 1.32291 v 52.916665 z" fill="#337ab7" id="arrow_1" class="tooltip-trigger" data-tooltip-text="omega_4" fill-opacity="0.5" stroke-width="0" transform="translate(-218.50951301878442,-218.50951301878442) scale(2.092547565093922)  rotate(-101.34642915870678,200,200)"/>    
        
        <g id="tooltip" visibility="hidden">

                <rect width="80" height="24" fill="white" rx="2" ry="2"/>
                <text x="3" y="6">Tooltip</text>
            </g>


            <script type="text/ecmascript"><![CDATA[
                (function() {
                    var svg = document.getElementById('tooltip-svg-5');
                    var tooltip = svg.getElementById('tooltip');
                    var tooltipText = tooltip.getElementsByTagName('text')[0].firstChild;
                    var triggers = svg.getElementsByClassName('tooltip-trigger');

                    for (var i = 0; i < triggers.length; i++) {
                        triggers[i].addEventListener('mousemove', showTooltip);
                        triggers[i].addEventListener('mouseout', hideTooltip);
                    }

                    function showTooltip(evt) {
                        var CTM = svg.getScreenCTM();
                        var x = (evt.clientX - CTM.e + 6) / CTM.a;
                        var y = (evt.clientY - CTM.f + 20) / CTM.d;
                        tooltip.setAttributeNS(null, "transform", "translate(" + x + " " + y + ")");
                        tooltip.setAttributeNS(null, "visibility", "visible");
                        tooltipText.data = evt.target.getAttributeNS(null, "data-tooltip-text");
                    }

                    function hideTooltip(evt) {
                        tooltip.setAttributeNS(null, "visibility", "hidden");
                    }
                })()
            ]]></script>
        </svg>